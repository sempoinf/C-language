#include<stdio.h>
#include<stdlib.h>

/*void main() {
	printf("Hello world\n");
}
*/

/* print Fahrenheit-celsius table for f = 0, 20, ..., 300 */
/*void main() {
	int lower=0, upper=300, step=20;
	float fahr, celsius;
	fahr = lower;
	while (fahr <= upper) {
		celsius = (5.0 / 9.0) * (fahr - 32.0);
		printf("%4.0f %6.1f\n", fahr, celsius);
		fahr = fahr + step;
	}
}*/
/*void main() {
	int lower = 0, upper = 300, step = 20;
	float fahr, celsius;
	celsius = lower;
	while (celsius <= upper) {
		fahr = celsius * (9.0 / 5.0) + 32.0;
		printf("%4.0f %6.1f\n", celsius, fahr);
		celsius += step;
		
		}
	}*/

/*void main() {
	for (int fahr =300; fahr >= 0; fahr -= 20) {
		printf("%4d %6.1f\n", fahr, (5.0 / 9.0) * (fahr - 32.0));
	}
}*/

//выводит вводимое 
/*void main() {
	int c;
		while ((c = getchar()) != EOF) {
		putchar(c);
		
	}

}*/

// count characters in input 
/*void main() {
	double count;
	for ( count = 0; getchar() != EOF; ++count);
	printf("%.0f\n", count);//%.0f подавляеи печать несуществеющей дробной части
}*/

// count lines in input
/*void main()
{
	int c, nl;
	nl = 0;
	while ((c = getchar()) != EOF)//"\n" - это символьная строка, которая содержит только один символ
		if (c == '\n')//'\n' - отдельный символ, который в выражениях эквивалентен одиночному целому 
			++nl;
	printf("%d\n", nl);
}*/


/*void main() {
	int c,space = 0, tab = 0, line = 0;;
	while ((c=getchar()) != EOF) {
		if (c == '\t') ++tab;
		if (c == '\n') ++line;
		if (c == ' ') ++space;
		}
	printf("%d,%d,%d\n", tab, line, space);
	//printf("%d\n", line);
	//printf("%d\n", space);
}*/


//ввод на вывод, заменяя при этом каждую последовательность из одного или более пробелов на один пробел
/*void main() {
	int c,space=0;
		while ((c = getchar()) != EOF) {
			while (c == ' ') { 
				++space;
				c = getchar();}
			if (space > 1) {
				printf(" "); 
				space = 0;
			}
		putchar(c);
	}
}*/


//#define YES 1
//#define NO 0
/* count lines, words, chars in input */
/*void main() 
{
	int c, line, word, inword, simb;
	inword = NO;
	line = word = simb = 0;
	while ((c = getchar()) != EOF) {
		++simb;
		if (c == '\n')
			++line;
		if (c == ' ' || c == '\n' || c == '\t')
			inword = NO;
		else if (inword == NO) {
			inword = YES;
			++word;
		}
	}
	printf("%d %d %d\n", line, word, simb);
}*/

//печатать слова из файла ввода, причем по одному на строку.
/*
void main() {
	int c;
	while ((c = getchar()) != EOF) {
		if (c == ' ' || c == '\t') {
			c = getchar();
			printf("\n");
		}
		putchar(c);
	}
}
*/

//1-11
/*#define YES 1
#define NO 0
void main() {
	int c, word,inword;
	word = 0;
	inword = NO;
	while ((c = getchar()) != EOF) {
		if (c == ' ' || c == '\n' || c == '\t')
			inword = NO;
		else if (inword == NO) {
			inword = YES;
			++word;
		}
	}
	printf("% d\n", word);
}*/

/* count digits, whtie space, others */
/*void main()  {
		int c, i, nwhtie, nother;
		int ndigit[10];
		nwhtie = nother = 0;
		for (i = 0; i < 10; ++i)
			ndigit[i] = 0;
		while ((c = getchar()) != EOF)
			if (c >= '0' && c <= '9')
				++ndigit[c - '0'];
			else if (c == ' ' || c == '\n' || c == '\t')
				++nwhtie;
			else
				++nother;
		printf("digits =");
		for (i = 0; i < 10; ++i)
			printf(" %d", ndigit[i]);
		printf("\nwhtie space = %d, other = %d\n",
			nwhtie, nother);
	}*/

/*void main() {
	int c,i, simb;
	simb = 0;
	int ndigit[15];
	for (i = 0; i < 15; ++i)
		ndigit[i] = 0;
	while ((c = getchar()) != EOF) {
		if (c == ' ' || c == '\t' || c == '\n') {
			++ndigit[simb];
			simb = 0;
		}
		else ++simb;
	}
	printf("gistogramm =");
	for (i = 0; i < 15; ++i)
		printf(" %d", ndigit[i]);
}*/

/*int power(int x, int n) // raise x n-th power; n > 0 
{
	int i, p;
	p = 1;
	for (i = 1; i <= n; ++i)
		p = p * x;
	return (p);
}
void main() // test power function 
{
	int i;
		for (i = 0; i < 10; ++i)
			printf("%d %d %d\n", i, power(2, i), power(-3, i));
}*/

int ower(int c) {//программу преобразования прописных букв из файла ввода в строчные
	if (c >= '0' && c <= '9') return(c);
	else if (c >= 'A' && c <= 'Z') {
		c += 'a' - 'A';
		return(c);
	}
	else return(c);
}
void main() {
	int c;
	while ((c = getchar()) != EOF)
	putchar(ower(c));
}
